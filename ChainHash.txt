*** Hashing Closed Addressing using Chain method ***


INITIALIZE-HASH-TABLE(m):
    for i = 0 to m - 1:
        Table[i] = empty list

HASH(key, m):
    return key mod m

INSERT(Table, key, m):
    index = HASH(key, m)
    append key to Table[index]

SEARCH(Table, key, m):
    index = HASH(key, m)
    for each element in Table[index]:
        if element == key:
            return true
    return false

DELETE(Table, key, m):
    index = HASH(key, m)
    for each element in Table[index]:
        if element == key:
            remove element from Table[index]
            break


Advantages:

Simple to implement. 
Hash table never fills up, we can always add more elements to the chain. 
Less sensitive to the hash function or load factors. 
It is mostly used when it is unknown how many and how frequently keys may be inserted or deleted. 

Disadvantages: 

The cache performance of chaining is not good as keys are stored using a linked list. Open addressing provides better cache performance as everything is stored in the same table. 
Wastage of Space (Some Parts of the hash table are never used) 
If the chain becomes long, then search time can become O(n) in the worst case
Uses extra space for links